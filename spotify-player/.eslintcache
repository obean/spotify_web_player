[{"/Users/nicolakeys/pre-job-projects/spotify_web_player/spotify-player/src/App.js":"1","/Users/nicolakeys/pre-job-projects/spotify_web_player/spotify-player/src/reportWebVitals.js":"2","/Users/nicolakeys/pre-job-projects/spotify_web_player/spotify-player/src/components/controlBar.component.js":"3","/Users/nicolakeys/pre-job-projects/spotify_web_player/spotify-player/src/index.js":"4"},{"size":3372,"mtime":1607895131412,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1607803088534,"results":"7","hashOfConfig":"6"},{"size":2290,"mtime":1607886761138,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1607803088530,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"hsl14g",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/nicolakeys/pre-job-projects/spotify_web_player/spotify-player/src/App.js",["20","21","22"],"/Users/nicolakeys/pre-job-projects/spotify_web_player/spotify-player/src/reportWebVitals.js",[],"/Users/nicolakeys/pre-job-projects/spotify_web_player/spotify-player/src/components/controlBar.component.js",["23","24"],"import React, { useState, useEffect, useRef } from \"react\";\nimport './controlBar.css'\nimport {FaPauseCircle, FaPlayCircle, FaArrowAltCircleLeft, FaArrowAltCircleRight } from 'react-icons/fa';\nfunction ControlBar(props) {\n  const [isPlaying, setIsPlaying] = useState();\n  const [volume, setVolume] = useState(100);\n\n  // useEffect(() => {\n  //   const getVolume = async () => {\n  //     const data = await  props.player.getVolume()\n  //                                     .then(data => setVolume(data) )\n  //                                     .then(console.log(volume))\n  //   }\n  //   getVolume();\n  // }, [props.player] )\n\n\n\n  let interval = useRef();\n\n  const pausePlayer = () => {\n    props.player.pause()\n                .then(() => setIsPlaying(false))\n                .then(() => console.log(\"playback paused\"))\n  }\n\n  const resumePlayer = () => {\n    props.player.resume()\n                .then(() => setIsPlaying(true))\n                .then(() => console.log(\"playback resumed\"))\n  }\n\n  const nextTrack = () => {\n    props.player.nextTrack()\n                .then(() => {\n                  if(!isPlaying) {\n                    setIsPlaying(true)\n                  }\n                })\n                .then(() => console.log(\"track skipped\"))\n  }\n\n  const previousTrack = () => {\n    props.player.previousTrack() \n                .then(() => console.log(\"previous track \"))\n  }\n\n  const setPlayerVolume = event => {\n    props.player.setVolume(event.target.value/100)\n    setVolume(event.target.value)\n  }\n\n\n  return(\n    <div id=\"controlBar\">\n      <div class=\"controlBar-button\"> <FaArrowAltCircleLeft onClick={previousTrack}/> </div>\n      {isPlaying ? <div class=\"controlBar-button\"> <FaPauseCircle onClick={() => pausePlayer()}/> </div> \n                 : <div class=\"controlBar-button\"> <FaPlayCircle onClick={() => resumePlayer()}/> </div>\n      }\n      <div class=\"controlBar-button\"> <FaArrowAltCircleRight onClick={() => nextTrack()}/> </div>\n      <div class=\"controlBar-slider\">\n        <input type=\"range\"\n               class=\"slider\"\n               id=\"volume-slider\"\n               value={volume} \n               onChange={(event) => setPlayerVolume(event)} \n               min=\"0\" max=\"100\" \n        />\n      </div>\n    </div>\n  )\n}\n\nexport default ControlBar; ","/Users/nicolakeys/pre-job-projects/spotify_web_player/spotify-player/src/index.js",[],["25","26"],{"ruleId":"27","severity":1,"message":"28","line":31,"column":19,"nodeType":"29","messageId":"30","endLine":31,"endColumn":29},{"ruleId":"31","severity":1,"message":"32","line":42,"column":6,"nodeType":"33","endLine":42,"endColumn":8,"suggestions":"34"},{"ruleId":"31","severity":1,"message":"35","line":46,"column":18,"nodeType":"36","endLine":46,"endColumn":59},{"ruleId":"27","severity":1,"message":"37","line":1,"column":27,"nodeType":"29","messageId":"30","endLine":1,"endColumn":36},{"ruleId":"27","severity":1,"message":"38","line":19,"column":7,"nodeType":"29","messageId":"30","endLine":19,"endColumn":15},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},"no-unused-vars","'setDevices' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkForPlayer' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["43"],"Assignments to the 'interval' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'useEffect' is defined but never used.","'interval' is assigned a value but never used.","no-native-reassign",["44"],"no-negated-in-lhs",["45"],{"desc":"46","fix":"47"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [checkForPlayer, token]",{"range":"48","text":"49"},[989,991],"[checkForPlayer, token]"]